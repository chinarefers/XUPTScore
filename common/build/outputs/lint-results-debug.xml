<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.1.7">

    <issue
        id="MissingSuperCall"
        severity="Error"
        message="Overriding method should call `super.onFinishInflate`"
        category="Correctness"
        priority="9"
        summary="Missing Super Call"
        explanation="Some methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method."
        errorLine1="    protected void onFinishInflate() {"
        errorLine2="                   ~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/MyScrollView.java"
            line="29"
            column="20"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type styleable"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="                mNavBarAvailable = a.getBoolean(1, false);"
        errorLine2="                                                ~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/SystemBarTintManager.java"
            line="80"
            column="49"/>
    </issue>

    <issue
        id="CommitPrefEdits"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Missing `commit()` on `SharedPreference` editor"
        explanation="After calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results."
        errorLine1="        editor.commit();"
        errorLine2="        ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/StaticVarUtil.java"
            line="225"
            column="9"/>
    </issue>

    <issue
        id="CommitPrefEdits"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Missing `commit()` on `SharedPreference` editor"
        explanation="After calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results."
        errorLine1="        editor.commit();"
        errorLine2="        ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/StaticVarUtil.java"
            line="265"
            column="9"/>
    </issue>

    <issue
        id="CommitPrefEdits"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Missing `commit()` on `SharedPreference` editor"
        explanation="After calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results."
        errorLine1="        editor.commit();"
        errorLine2="        ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/Util.java"
            line="224"
            column="9"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: `javax.activation`. Referenced from `com.sun.mail.dsn.message_deliverystatus`."
        category="Correctness"
        priority="6"
        summary="Package not included in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/libs/mail.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        severity="Error"
        message="Invalid package reference in library; not included in Android: `javax.security.sasl`. Referenced from `com.sun.mail.imap.protocol.IMAPSaslAuthenticator`."
        category="Correctness"
        priority="6"
        summary="Package not included in Android"
        explanation="This check scans through libraries looking for calls to APIs that are not included in Android.

When you create Android projects, the classpath is set up such that you can only access classes in the API packages that are included in Android. However, if you add other projects to your libs/ folder, there is no guarantee that those .jar files were built with an Android specific classpath, and in particular, they could be accessing unsupported APIs such as java.applet.

This check scans through library jars and looks for references to API packages that are not included in Android and flags these. This is only an error if your code calls one of the library classes which wind up referencing the unsupported package.">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/libs/mail.jar"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 22"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/build.gradle"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).

Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/FileUtils.java"
            line="614"
            column="32"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).

Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="        SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/LogcatHelper.java"
            line="40"
            column="35"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Warning"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).

Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        errorLine1="        SimpleDateFormat format1 = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/LogcatHelper.java"
            line="46"
            column="36"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="        View v = inflater.inflate(R.layout.progress, null);"
        errorLine2="                                                     ~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/VersionUpdate.java"
            line="154"
            column="54"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="The targetSdkVersion (22) should not be higher than the compileSdkVersion (21)"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compileSdkVersion 21"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/build.gradle"
            line="4"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="Old buildToolsVersion 22.0.0; recommended version is 22.0.1 or later"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    buildToolsVersion &quot;22.0.0&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/build.gradle"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one or more of: PackageManager.GET_META_DATA, PackageManager.GET_SHARED_LIBRARY_FILES"
        category="Security"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="                    16384);"
        errorLine2="                    ~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/Util.java"
            line="59"
            column="21"/>
    </issue>

    <issue
        id="WorldReadableFiles"
        severity="Warning"
        message="Using `MODE_WORLD_READABLE` when creating files can be risky, review carefully"
        category="Security"
        priority="4"
        summary="`openFileOutput()` or similar call passing `MODE_WORLD_READABLE`"
        explanation="There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications."
        errorLine1="                .getSharedPreferences(SHAREDPREFERENCES_NAME, Context.MODE_WORLD_READABLE)"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/MyPreferences.java"
            line="20"
            column="71"/>
    </issue>

    <issue
        id="WorldReadableFiles"
        severity="Warning"
        message="Using `MODE_WORLD_READABLE` when creating files can be risky, review carefully"
        category="Security"
        priority="4"
        summary="`openFileOutput()` or similar call passing `MODE_WORLD_READABLE`"
        explanation="There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications."
        errorLine1="                Context.MODE_WORLD_READABLE).getString(KEY_GUIDE_ACTIVITY, &quot;&quot;);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/MyPreferences.java"
            line="37"
            column="25"/>
    </issue>

    <issue
        id="WorldReadableFiles"
        severity="Warning"
        message="Using `MODE_WORLD_READABLE` when creating files can be risky, review carefully"
        category="Security"
        priority="4"
        summary="`openFileOutput()` or similar call passing `MODE_WORLD_READABLE`"
        explanation="There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications."
        errorLine1="        context.getSharedPreferences(SHAREDPREFERENCES_NAME, Context.MODE_WORLD_READABLE)// �����޸ĺ��ֵ"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/MyPreferences.java"
            line="39"
            column="70"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="        Cursor c = sqLiteDatabase.query(UserSchema.USERPHOTO_TABLE, USERSFROM,"
        errorLine2="                                  ~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/db/DBConnection.java"
            line="90"
            column="35"/>
    </issue>

    <issue
        id="Recycle"
        severity="Warning"
        message="This `Cursor` should be freed up after use with `#close()`"
        category="Performance"
        priority="7"
        summary="Missing `recycle()` calls"
        explanation="Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls."
        errorLine1="                cursor = context.getContentResolver().query(uri, projection, null, null, null);"
        errorLine2="                                                      ~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/FileUtils.java"
            line="33"
            column="55"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Warning"
        message="This Handler class should be static or leaks might occur (anonymous android.os.Handler)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object."
        errorLine1="    private Handler mHandler = new Handler() {"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/VersionUpdate.java"
            line="53"
            column="32"/>
    </issue>

    <issue
        id="TypographyEllipsis"
        severity="Warning"
        message="Replace &quot;...&quot; with ellipsis character (…, &amp;#8230;) ?"
        category="Usability:Typography"
        priority="5"
        summary="Ellipsis string can be replaced with ellipsis character"
        explanation="You can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis character (…, &amp;#8230;). This can help make the text more readable."
        url="http://en.wikipedia.org/wiki/Ellipsis"
        urls="http://en.wikipedia.org/wiki/Ellipsis"
        errorLine1="    &lt;string name=&quot;waiting&quot;>请稍等...&lt;/string>"
        errorLine2="                           ^"
        quickfix="studio,adt">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/res/values/strings.xml"
            line="6"
            column="28"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="`top/codemc/common/util/ScrollViewLinearLayout#onTouch` should call `View#performClick` when a click is detected"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                   ~~~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/ScrollViewLinearLayout.java"
            line="72"
            column="20"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`Gravity.END`&quot; instead of &quot;`Gravity.RIGHT`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            params.gravity = Gravity.RIGHT;"
        errorLine2="                                     ~~~~~">
        <location
            file="/Users/xiyoumc/dev/github/西邮成绩/common/src/main/java/top/codemc/common/util/SystemBarTintManager.java"
            line="324"
            column="38"/>
    </issue>

</issues>
